apiVersion: apps/v1
kind: Deployment
metadata:
  name: engine
  labels:
    app: engine
    app.kubernetes.io/name: engine
    app.kubernetes.io/component: inference
    app.kubernetes.io/part-of: wallaroo
    
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: {{ .Values.rollingUpdate.enabled | ternary "RollingUpdate" "Recreate" }}
    {{- if .Values.rollingUpdate.enabled }}
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
    {{- end }}
  selector:
    matchLabels:
      app: engine
  template:
    metadata:
      annotations:
          prometheus.io/scrape: 'true'
          prometheus.io/port:   '9000'
      labels:
        app: engine
        app.kubernetes.io/name: engine
        app.kubernetes.io/component: inference
        app.kubernetes.io/part-of: wallaroo
    spec:
      imagePullSecrets:
        - name: oci-registry-docker
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: wallaroo-node-type
                operator: In
                values:
                - engine
            weight: 1
      tolerations:
        - effect: NoSchedule
          key: wallaroo-engine
          operator: Exists
        - effect: NoSchedule
          key: wallaroo
          operator: Exists
      containers:
      - name: engine
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        workingDir: /usr/src/fitzroy
        ports:
          - containerPort: 8080
          - containerPort: 9000
        readinessProbe:
          httpGet:
            path: /healthz              
            port: 8080
          initialDelaySeconds: 2
          periodSeconds: 10
        env:
        - name: RUST_LOG
          value: debug,fitzroy::sink=info          
        - name: RUST_BACKTRACE
          value: "full"
        - name: WALLAROO_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OCI_USERNAME
          valueFrom:
            secretKeyRef:
              name: oci-registry
              key: USERNAME
        - name: OCI_PASSWORD
          valueFrom:
            secretKeyRef:
              name: oci-registry
              key: PASSWORD
        - name: OCI_REGISTRY
          valueFrom:
            secretKeyRef:
              name: oci-registry
              key: URI
        - name: UPDATED_AT
          value: 2023-05-23T14:15:07.673131+00:00
        - name: PIPELINE_URL
          value: {{ .Values.engine.pipelineUrl }}
        - name: CONFIG_CPUS
          value: {{ .Values.engine.cpus | quote }}
        - name: CONFIG_MEMORY
          value: {{ .Values.engine.memory }}          
{{- if .Values.engine.extraEnv }}
{{ toYaml .Values.engine.extraEnv | indent 8 }}
{{- end }}  
        imagePullPolicy: Always
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      nodeSelector: {}
